AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  TOKEN TRASH
  
Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com

Parameters:
  XUMMApiToken:
    Type: String
    Description: The registered XUMM API Token

  XUMMApiSecret:
    Type: String
    Description: The registered XUMM API Secret
    NoEcho: true

  ACMCertificateArn:
    Type: String

  StackHostedZoneId:
    Type: String


Resources:
  TokenTrashXUMMCallbackHTTP:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: TokenTrashXUMMCallbackHTTP
      ProtocolType: HTTP
      Target:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${XUMMCallbackFunction.Arn}/invocations
      CorsConfiguration:
        AllowMethods:
          - GET
        AllowOrigins:
          - "*"
          # - !Ref WSTokenTrashRecordSetAlias
          # - !Join
          #   - ""
          #   -
          #     - "wss://"
          #     - !Ref WSTokenTrashRecordSetAlias
          # - !Join
          #   - ""
          #   -
          #     - "https://"
          #     - !Ref TokenTrashRecordSetAlias
  XUMMCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: xumm-callback/
      Handler: app.handler
      MemorySize: 128
      Runtime: python3.8
  XUMMCallbackPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - TokenTrashXUMMCallbackHTTP
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref XUMMCallbackFunction
      Principal: apigateway.amazonaws.com

  TokenTrashHTTP:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: TokenTrashHTTP
      ProtocolType: HTTP
      Target:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontendFunction.Arn}/invocations
      CorsConfiguration:
        AllowMethods:
          - GET
        AllowOrigins:
          - "*"
          # - !Ref WSTokenTrashRecordSetAlias
          # - !Join
          #   - ""
          #   -
          #     - "wss://"
          #     - !Ref WSTokenTrashRecordSetAlias
          # - !Join
          #   - ""
          #   -
          #     - "https://"
          #     - !Ref TokenTrashRecordSetAlias
  FrontendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: frontend/
      Handler: app.handler
      MemorySize: 128
      Runtime: python3.8
      Environment:
        Variables:
          XUMM_API_KEY: !Ref XUMMApiToken
          XUMM_API_SECRET: !Ref XUMMApiSecret
  FrontEndPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - TokenTrashHTTP
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref FrontendFunction
      Principal: apigateway.amazonaws.com

  # S3Bucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     AccessControl: PublicRead
  #     WebsiteConfiguration:
  #       IndexDocument: index.html
  #       ErrorDocument: error.html
  #     CorsConfiguration:
  #       CorsRules:
  #         - AllowedHeaders:
  #             - '*'
  #           AllowedMethods:
  #             - GET
  #           AllowedOrigins:
  #             - '*'
  #   DeletionPolicy: Retain
  #
  #     # Name: !Ref RootDomainName
  # BucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     PolicyDocument:
  #       Id: MyPolicy
  #       Version: 2012-10-17
  #       Statement:
  #         - Sid: PublicReadForGetBucketObjects
  #           Effect: Allow
  #           Principal: '*'
  #           Action: 's3:GetObject'
  #           Resource: !Join 
  #             - ''
  #             - - 'arn:aws:s3:::'
  #               - !Ref S3Bucket
  #               - /*
  #     Bucket: !Ref S3Bucket

  # TokenTrashDomainName:
  #   Type: AWS::ApiGatewayV2::DomainName
  #   Properties:
  #     DomainName: dev.tokentrasher.app
  #     DomainNameConfigurations:
  #       - EndpointType: REGIONAL
  #         # TODO, include in stack
  #         CertificateArn: !Ref ACMCertificateArn
  #         CertificateName: tokenTrashAppCert
  #
  # HTTPRootMapping:
  #   Type: AWS::ApiGatewayV2::ApiMapping
  #   Properties:
  #     DomainName: !Ref TokenTrashDomainName
  #     ApiId: !Ref TokenTrashXUMMCallbackHTTP
  #     Stage: $default
  #
  # TokenTrashRecordSetAlias:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneId: !Ref StackHostedZoneId
  #     Name: dev.tokentrasher.app
  #     # AliasTarget:
  #     #   DNSName: !GetAtt TokenTrashDomainName.RegionalDomainName
  #     #   HostedZoneId: !GetAtt TokenTrashDomainName.RegionalHostedZoneId
  #     #   EvaluateTargetHealth: false
  #     # Type: A
  #     Type: A
  #     AliasTarget:
  #       HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
  #       DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]

Outputs:
  HTTPSURI:
    Description: "The HTTPS URI to connect to"
    Value: !GetAtt TokenTrashHTTP.ApiEndpoint
  HTTPSCallbackURI:
    Description: "The HTTPS URI for the XUMM backend to connect to"
    Value: !GetAtt TokenTrashXUMMCallbackHTTP.ApiEndpoint
  
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content
